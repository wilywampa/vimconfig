snippet     class
abbr        class Class(...): ...
options     head
	class ${1:#:name}(${2:object}):

		def __init__(self, ${3}):
			${0:pass}

snippet     classd
abbr        class Class(...): "..."
options     head
	class ${1:#:name}(${2:object}):

		"""${3:#:class documentation}"""

		def __init__(self, ${4}):
			"""${5:#:__init__ documentation}"""
			${0:pass}

snippet     ipdb
abbr        import ipdb..
    import ipdb; ipdb.set_trace()

snippet     cl
abbr        plt.close('all')
options     head
	plt.close('all')

snippet     f
abbr        plt.figure()
	plt.figure(${0})

snippet     p
abbr        plt.plot()
	plt.plot(${0})

snippet     l
abbr        plt.legend()
	plt.legend(${0})

snippet     plt
abbr        import pyplot
options     head
	import matplotlib.pyplot as plt

snippet     mpl
abbr        import matplotlib
options     head
	import matplotlib as mpl

snippet     np
abbr        import numpy
options     head
	import numpy as np

snippet     sh
abbr        plt.show()
options     head
	plt.show()

snippet     xl
abbr        plt.xlabel()
	plt.xlabel('${0}')

snippet     yl
abbr        plt.ylabel()
	plt.ylabel('${0}')

snippet     t
abbr        plt.title()
	plt.title('${0}')

snippet	    pyx
abbr        pyximport.install
	import pyximport
	pyximport.install(reload_support=True,
	                  setup_args={'include_dirs': np.get_include()})

snippet     d
abbr        display
	display(${0})

snippet     px
abbr        Client
	rc = get_ipython().user_ns.get('rc', None)
	if not hasattr(rc, 'direct_view') or rc._closed:
	    rc = px.Client()
	dv = rc.direct_view()
	lv = rc.load_balanced_view()

snippet     afig
abbr        assert Figure
	assert isinstance(${0:f}, plt.Figure)

snippet     aax
abbr        assert Axes
	assert isinstance(${0:ax}, plt.Axes)

snippet     aline
abbr        assert Line
	assert isinstance(${0:line}, plt.Line2D)

snippet     fax
abbr        plt.subplots()
        f, ax = plt.subplots()

snippet     future
abbr        from __future__ ...
	from __future__ import division, print_function

snippet     c
abbr        create(dataobj(...))
	create(dataobj(${1:data}, xname='${2}', yname='${3}')

snippet     do
abbr        dataobj(...)
	dataobj(${1:data}, xname='${2}', yname='${3}')

snippet     plot
	plt.figure()
	plt.${1:plot}(${2}, ${3}, ${4:#:'b-', }label=${5})
	plt.xlabel('${6}')
	plt.ylabel('${7}')
	plt.title('${8}')
	plt.legend()

snippet     map
abbr        [{f(x)} for x in {iterable}]
	[${3:x} for ${1:x} in ${2:iterable}]

snippet     rd
abbr        with ResultsDict() as rs: rs.add()
	with ResultsDict(${1:#:common args}) as rs:
	    rs.add(${2:#:args})
